// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Repositories;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(EFOpleidingenContext))]
    [Migration("20240924114230_FixSeeding")]
    partial class FixSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Entities.Docent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Familienaam")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Wedde")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.ToTable("Docenten", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Familienaam = "Michelle",
                            Voornaam = "Frederik",
                            Wedde = 5300m
                        },
                        new
                        {
                            Id = 2,
                            Familienaam = "Varaco",
                            Voornaam = "Anatov",
                            Wedde = 6200m
                        },
                        new
                        {
                            Id = 3,
                            Familienaam = "Von Pieterson",
                            Voornaam = "Pieter",
                            Wedde = 7900m
                        },
                        new
                        {
                            Id = 4,
                            Familienaam = "De Slaeger",
                            Voornaam = "Sarah",
                            Wedde = 3900m
                        },
                        new
                        {
                            Id = 5,
                            Familienaam = "Vandenheuvel",
                            Voornaam = "Karel",
                            Wedde = 6600m
                        },
                        new
                        {
                            Id = 6,
                            Familienaam = "Desmet",
                            Voornaam = "Irma",
                            Wedde = 3850m
                        },
                        new
                        {
                            Id = 7,
                            Familienaam = "Copain",
                            Voornaam = "Bart",
                            Wedde = 4200m
                        },
                        new
                        {
                            Id = 8,
                            Familienaam = "La Montana",
                            Voornaam = "Valentino",
                            Wedde = 7300m
                        });
                });

            modelBuilder.Entity("Model.Entities.DocentOpleiding", b =>
                {
                    b.Property<int>("OpleidingId")
                        .HasColumnType("int");

                    b.Property<int>("DocentId")
                        .HasColumnType("int");

                    b.Property<int>("Expertise")
                        .HasColumnType("int");

                    b.HasKey("OpleidingId", "DocentId");

                    b.HasIndex("DocentId");

                    b.ToTable("DocentOpleidingen", (string)null);

                    b.HasData(
                        new
                        {
                            OpleidingId = 1,
                            DocentId = 1,
                            Expertise = 7
                        },
                        new
                        {
                            OpleidingId = 3,
                            DocentId = 1,
                            Expertise = 6
                        },
                        new
                        {
                            OpleidingId = 3,
                            DocentId = 8,
                            Expertise = 7
                        },
                        new
                        {
                            OpleidingId = 6,
                            DocentId = 1,
                            Expertise = 4
                        },
                        new
                        {
                            OpleidingId = 5,
                            DocentId = 2,
                            Expertise = 9
                        },
                        new
                        {
                            OpleidingId = 8,
                            DocentId = 2,
                            Expertise = 7
                        },
                        new
                        {
                            OpleidingId = 8,
                            DocentId = 1,
                            Expertise = 4
                        },
                        new
                        {
                            OpleidingId = 2,
                            DocentId = 3,
                            Expertise = 9
                        },
                        new
                        {
                            OpleidingId = 2,
                            DocentId = 4,
                            Expertise = 7
                        },
                        new
                        {
                            OpleidingId = 2,
                            DocentId = 5,
                            Expertise = 5
                        },
                        new
                        {
                            OpleidingId = 7,
                            DocentId = 5,
                            Expertise = 4
                        },
                        new
                        {
                            OpleidingId = 7,
                            DocentId = 6,
                            Expertise = 7
                        },
                        new
                        {
                            OpleidingId = 4,
                            DocentId = 7,
                            Expertise = 9
                        },
                        new
                        {
                            OpleidingId = 4,
                            DocentId = 8,
                            Expertise = 6
                        });
                });

            modelBuilder.Entity("Model.Entities.Opleiding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalDagen")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Opleidingen", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AantalDagen = 90,
                            Naam = "C# Development"
                        },
                        new
                        {
                            Id = 2,
                            AantalDagen = 60,
                            Naam = "Professioneel Koken"
                        },
                        new
                        {
                            Id = 3,
                            AantalDagen = 90,
                            Naam = "Java Development"
                        },
                        new
                        {
                            Id = 4,
                            AantalDagen = 30,
                            Naam = "Geavanceerde Algebra"
                        },
                        new
                        {
                            Id = 5,
                            AantalDagen = 15,
                            Naam = "Italiaans voor beginners"
                        },
                        new
                        {
                            Id = 6,
                            AantalDagen = 30,
                            Naam = "Cybersecurity in webapplicaties"
                        },
                        new
                        {
                            Id = 7,
                            AantalDagen = 10,
                            Naam = "Communicatie in professionele setting"
                        },
                        new
                        {
                            Id = 8,
                            AantalDagen = 40,
                            Naam = "Frans voor gevorderden"
                        });
                });

            modelBuilder.Entity("Model.Entities.DocentOpleiding", b =>
                {
                    b.HasOne("Model.Entities.Docent", "docent")
                        .WithMany("docentOpleidingen")
                        .HasForeignKey("DocentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Opleiding", "opleiding")
                        .WithMany("docentOpleidingen")
                        .HasForeignKey("OpleidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("docent");

                    b.Navigation("opleiding");
                });

            modelBuilder.Entity("Model.Entities.Docent", b =>
                {
                    b.Navigation("docentOpleidingen");
                });

            modelBuilder.Entity("Model.Entities.Opleiding", b =>
                {
                    b.Navigation("docentOpleidingen");
                });
#pragma warning restore 612, 618
        }
    }
}
